#include <stdio.h>
#include <stdlib.h>
struct node
{
int val;
struct node *l, *r;
};
struct node* makeNode(int x)
{
struct node* p = (struct node*)malloc(sizeof(struct node));
p->val = x;
p->l = p->r = NULL;
return p;
}
struct node* insert(struct node* root, int x)
{ 
if (root == NULL) return makeNode(x);
if (x < root->val)
root->l = insert(root->l, x);
else if (x > root->val)
root->r = insert(root->r, x);
return root;
}
struct node* minNode(struct node* t)
{
while (t && t->l != NULL)
{
t = t->l;
}
return t;
}
struct node* delNode(struct node* root, int x)
{
if (root == NULL) return NULL;
if (x < root->val)
{
root->l = delNode(root->l, x);
}
else if (x > root->val)
{
root->r = delNode(root->r, x);
}
else {
if (root->l == NULL)
{
struct node* tmp = root->r;
free(root);
return tmp;
}
else if (root->r == NULL)
{
struct node* tmp = root->l;
free(root);
return tmp;
}
struct node* tmp = minNode(root->r);
root->val = tmp->val;
root->r = delNode(root->r, tmp->val);
}
return root;
}
void inorder(struct node* root)
{
if (root != NULL)
{
inorder(root->l);
printf("%d ", root->val);
inorder(root->r);
}
}
int main()
{
struct node* root = NULL;
int n, x;
printf("How many nodes? ");
scanf("%d", &n);
printf("Enter %d values:\n", n);
for (int i = 0; i < n; i++)
{
scanf("%d", &x);
root = insert(root, x);
}
printf("\nInorder traversal: ");
inorder(root);printf("\nValue to remove: ");
scanf("%d", &x);
root = delNode(root, x);
printf("After deletion: ");
inorder(root);
printf("\n");
}